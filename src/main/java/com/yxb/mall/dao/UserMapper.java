/**
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright 2017 © yangxiaobing, 873559947@qq.com
 *
 * This file is part of contentManagerSystem.
 * contentManagerSystem is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * contentManagerSystem is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with contentManagerSystem.  If not, see <http://www.gnu.org/licenses/>.
 *
 * 这个文件是contentManagerSystem的一部分。
 * 您可以单独使用或分发这个文件，但请不要移除这个头部声明信息.
 * contentManagerSystem是一个自由软件，您可以自由分发、修改其中的源代码或者重新发布它，
 * 新的任何修改后的重新发布版必须同样在遵守GPL3或更后续的版本协议下发布.
 * 关于GPL协议的细则请参考COPYING文件，
 * 您可以在contentManagerSystem的相关目录中获得GPL协议的副本，
 * 如果没有找到，请连接到 http://www.gnu.org/licenses/ 查看。
 *
 * - Author: yangxiaobing
 * - Contact: 873559947@qq.com
 * - License: GNU Lesser General Public License (GPL)
 * - source code availability: http://git.oschina.net/yangxiaobing_175/contentManagerSystem
 */
package com.yxb.mall.dao;


import com.yxb.mall.domain.vo.User;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.springframework.stereotype.Component;

import java.util.List;
import java.util.Map;


/**
 * 用户信息DAO
 *
 */
@Mapper
@Component
public interface UserMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cc_user
     *
     * @mbggenerated Thu Aug 11 16:34:46 CST 2016
     */
    int deleteByPrimaryKey(Integer userId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cc_user
     *
     * @mbggenerated Thu Aug 11 16:34:46 CST 2016
     */
    int insert(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cc_user
     *
     * @mbggenerated Thu Aug 11 16:34:46 CST 2016
     */
    int insertSelective(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cc_user
     *
     * @mbggenerated Thu Aug 11 16:34:46 CST 2016
     */
    User selectByPrimaryKey(Integer userId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cc_user
     *
     * @mbggenerated Thu Aug 11 16:34:46 CST 2016
     */
    int updateByPrimaryKeySelective(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cc_user
     *
     * @mbggenerated Thu Aug 11 16:34:46 CST 2016
     */
    int updateByPrimaryKey(User record);

    /**
     * 更改用户状态
     * @param params 参数
     */
    void updateUserByStatus(Map<String, Object> params);

    /**
     * 根据登陆用户名和状态查询用户信息
     * @param userLoginName
     * @param userStatus
     * @return
     */
    User selectUserByloginNameAndStatus(@Param("userLoginName") String userLoginName,@Param("userStatus") Long userStatus);


    /**
     * 查询用户总记录数
     * @param user 用户实体
     * @return
     */
    Long selectCountUser(User user);
    /**
     * 用户信息分页列表显示
     * @param user 用户实体
     * @return
     */
    List<User> selectUserListByPage(User user);

    /**
     * 用户信息列表信息List
     * @param user 用户实体
     * @return
     */
    List<User>selectUserList(User user);

    /**
     * 验证用户账号唯一性
     * @param userLoginName 登陆账号
     * @param userId  用户Id
     * @return
     */
    Long selectUserLoginNameCheck(@Param("userLoginName") String userLoginName,@Param("userId") Integer userId);
    
    
    
    
}